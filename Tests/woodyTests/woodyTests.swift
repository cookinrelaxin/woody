import XCTest
@testable import woody

typealias T = TokenInfo

class woodyTests: XCTestCase
{
    func testExample()
    {
        let url = URL(fileURLWithPath: "./Tests/woodyTests/swift.woody")
        let coordinator = PipelineCoordinator(url: url)

        let actualTokens = coordinator.lexer.tokens
        /*print(actualTokens)*/

        let expectedTokens: [Token] =
        [
            .identifier                 (T("whitespace")),
            .tokenDefinitionMarker      (T("=>")),
            .identifier                 (T("whitespace_item")),
            .oneOrMoreOperator          (T("+")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("identifier")),
            .tokenDefinitionMarker      (T("=>")),
            .identifier                 (T("identifier_head")),
            .identifier                 (T("identifier_character")),
            .zeroOrMoreOperator         (T("*")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("keyword")),
            .tokenDefinitionMarker      (T("=>")),
            .identifier                 (T("declaration_keyword")),
            .unionOperator              (T("|")),
            .identifier                 (T("statement_keyword")),
            .unionOperator              (T("|")),
            .identifier                 (T("expression_or_type_keyword")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("punctuation")),
            .tokenDefinitionMarker      (T("=>")),
            .character                  (T("'(")),
            .unionOperator              (T("|")),
            .character                  (T("')")),
            .unionOperator              (T("|")),
            .character                  (T("'{")),
            .unionOperator              (T("|")),
            .character                  (T("'}")),
            .unionOperator              (T("|")),
            .character                  (T("'[")),
            .unionOperator              (T("|")),
            .character                  (T("']")),
            .unionOperator              (T("|")),
            .character                  (T("'.")),
            .unionOperator              (T("|")),
            .character                  (T("',")),
            .unionOperator              (T("|")),
            .character                  (T("':")),
            .unionOperator              (T("|")),
            .character                  (T("';")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("whitespace")),
            .tokenDefinitionMarker      (T("=>")),
            .identifier                 (T("whitespace_item")),
            .oneOrMoreOperator          (T("+")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("whitespace_item")),
            .helperDefinitionMarker     (T("->")),
            .identifier                 (T("line_break")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("whitespace_item")),
            .helperDefinitionMarker     (T("->")),
            .identifier                 (T("comment")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("whitespace_item")),
            .helperDefinitionMarker     (T("->")),
            .identifier                 (T("multiline_comment")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("whitespace_item")),
            .helperDefinitionMarker     (T("->")),
            .bracketedSetLeftDelimiter  (T("{")),
            .character                  (T("u0000")),
            .setSeparator               (T(",")),
            .character                  (T("u0009")),
            .setSeparator               (T(",")),
            .character                  (T("u000B")),
            .setSeparator               (T(",")),
            .character                  (T("u000C")),
            .setSeparator               (T(",")),
            .character                  (T("u0020")),
            .bracketedSetRightDelimiter (T("}")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("line_break")),
            .helperDefinitionMarker     (T("->")),
            .character                  (T("u000A")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("line_break")),
            .helperDefinitionMarker     (T("->")),
            .character                  (T("u000D")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("line_break")),
            .helperDefinitionMarker     (T("->")),
            .character                  (T("u000D")),
            .character                  (T("u000A")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("comment")),
            .helperDefinitionMarker     (T("->")),
            .string                     (T("\"//\"")),
            .identifier                 (T("commentText")),
            .identifier                 (T("lineBreak")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("multiline_comment")),
            .helperDefinitionMarker     (T("->")),
            .string                     (T("\"/*\"")),
            .identifier                 (T("commentText")),
            .string                     (T("\"*/\"")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("commentText")),
            .helperDefinitionMarker     (T("->")),
            .identifier                 (T("commentTextItem")),
            .oneOrMoreOperator          (T("+")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("commentTextItem")),
            .helperDefinitionMarker     (T("->")),
            .unicode                    (T("U")),
            .setMinus                   (T("\\")),
            .bracketedSetLeftDelimiter  (T("{")),
            .character                  (T("u000A")),
            .setSeparator               (T(",")),
            .character                  (T("u000D")),
            .bracketedSetRightDelimiter (T("}")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("identifier")),
            .tokenDefinitionMarker      (T("=>")),
            .identifier                 (T("identifier_head")),
            .identifier                 (T("identifier_character")),
            .zeroOrMoreOperator         (T("*")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("identifier")),
            .helperDefinitionMarker     (T("->")),
            .character                  (T("'`")),
            .identifier                 (T("identifier_head")),
            .identifier                 (T("identifier_character")),
            .zeroOrMoreOperator         (T("*")),
            .character                  (T("'`")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("identifier")),
            .helperDefinitionMarker     (T("->")),
            .identifier                 (T("implicit_parameter_name")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("identifier_head")),
            .helperDefinitionMarker     (T("->")),
            .character                  (T("'a")),
            .rangeSeparator             (T("-")),
            .character                  (T("'z")),
            .unionOperator              (T("|")),
            .character                  (T("'A")),
            .rangeSeparator             (T("-")),
            .character                  (T("'Z")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("identifier_head")),
            .helperDefinitionMarker     (T("->")),
            .character                  (T("'_")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("identifier_head")),
            .helperDefinitionMarker     (T("->")),
            .bracketedSetLeftDelimiter  (T("{")),

            .character                  (T("u00A8")),
            .setSeparator               (T(",")),
            .character                  (T("u00AA")),
            .setSeparator               (T(",")),
            .character                  (T("u00AF")),
            .setSeparator               (T(",")),
            .character                  (T("u00B2")),
            .rangeSeparator             (T("-")),
            .character                  (T("u00B5")),
            .setSeparator               (T(",")),
            .character                  (T("u00B7")),
            .rangeSeparator             (T("-")),
            .character                  (T("u00BA")),
            .setSeparator               (T(",")),
            .character                  (T("u00BC")),
            .rangeSeparator             (T("-")),
            .character                  (T("u00BE")),
            .setSeparator               (T(",")),
            .character                  (T("u00C0")),
            .rangeSeparator             (T("-")),
            .character                  (T("u00D6")),
            .setSeparator               (T(",")),
            .character                  (T("u00D8")),
            .rangeSeparator             (T("-")),
            .character                  (T("u00F6")),
            .setSeparator               (T(",")),
            .character                  (T("u00F8")),
            .rangeSeparator             (T("-")),
            .character                  (T("u00FF")),
            .setSeparator               (T(",")),
            .character                  (T("u0100")),
            .rangeSeparator             (T("-")),
            .character                  (T("u02FF")),
            .setSeparator               (T(",")),
            .character                  (T("u0370")),
            .rangeSeparator             (T("-")),
            .character                  (T("u167F")),
            .setSeparator               (T(",")),
            .character                  (T("u1681")),
            .rangeSeparator             (T("-")),
            .character                  (T("u180D")),
            .setSeparator               (T(",")),
            .character                  (T("u180F")),
            .rangeSeparator             (T("-")),
            .character                  (T("u1DBF")),
            .setSeparator               (T(",")),
            .character                  (T("u1E00")),
            .rangeSeparator             (T("-")),
            .character                  (T("u1FFF")),
            .setSeparator               (T(",")),
            .character                  (T("u200B")),
            .rangeSeparator             (T("-")),
            .character                  (T("u200D")),
            .setSeparator               (T(",")),
            .character                  (T("u202A")),
            .rangeSeparator             (T("-")),
            .character                  (T("u202E")),
            .setSeparator               (T(",")),
            .character                  (T("u203F")),
            .rangeSeparator             (T("-")),
            .character                  (T("u2040")),
            .setSeparator               (T(",")),
            .character                  (T("u2054")),
            .setSeparator               (T(",")),
            .character                  (T("u2060")),
            .rangeSeparator             (T("-")),
            .character                  (T("u206F")),
            .setSeparator               (T(",")),
            .character                  (T("u2070")),
            .rangeSeparator             (T("-")),
            .character                  (T("u20CF")),
            .setSeparator               (T(",")),
            .character                  (T("u2100")),
            .rangeSeparator             (T("-")),
            .character                  (T("u218F")),
            .setSeparator               (T(",")),
            .character                  (T("u2460")),
            .rangeSeparator             (T("-")),
            .character                  (T("u24FF")),
            .setSeparator               (T(",")),
            .character                  (T("u2776")),
            .rangeSeparator             (T("-")),
            .character                  (T("u2793")),
            .setSeparator               (T(",")),
            .character                  (T("u2C00")),
            .rangeSeparator             (T("-")),
            .character                  (T("u2DFF")),
            .character                  (T("u2E80")),
            .rangeSeparator             (T("-")),
            .character                  (T("u2FFF")),
            .setSeparator               (T(",")),
            .character                  (T("u3004")),
            .rangeSeparator             (T("-")),
            .character                  (T("u3007")),
            .setSeparator               (T(",")),
            .character                  (T("u3021")),
            .rangeSeparator             (T("-")),
            .character                  (T("u302F")),
            .setSeparator               (T(",")),
            .character                  (T("u3031")),
            .rangeSeparator             (T("-")),
            .character                  (T("u303F")),
            .setSeparator               (T(",")),
            .character                  (T("u3040")),
            .rangeSeparator             (T("-")),
            .character                  (T("uD7FF")),
            .setSeparator               (T(",")),
            .character                  (T("uF900")),
            .rangeSeparator             (T("-")),
            .character                  (T("uFD3D")),
            .setSeparator               (T(",")),
            .character                  (T("uFD40")),
            .rangeSeparator             (T("-")),
            .character                  (T("uFDCF")),
            .setSeparator               (T(",")),
            .character                  (T("uFDF0")),
            .rangeSeparator             (T("-")),
            .character                  (T("uFE1F")),
            .setSeparator               (T(",")),
            .character                  (T("uFE30")),
            .rangeSeparator             (T("-")),
            .character                  (T("uFE44")),
            .setSeparator               (T(",")),
            .character                  (T("uFE47")),
            .rangeSeparator             (T("-")),
            .character                  (T("uFFFD")),
            .setSeparator               (T(",")),
            .character                  (T("u10000")),
            .rangeSeparator             (T("-")),
            .character                  (T("u1FFFD")),
            .setSeparator               (T(",")),
            .character                  (T("u20000")),
            .rangeSeparator             (T("-")),
            .character                  (T("u2FFFD")),
            .setSeparator               (T(",")),
            .character                  (T("u30000")),
            .rangeSeparator             (T("-")),
            .character                  (T("u3FFFD")),
            .setSeparator               (T(",")),
            .character                  (T("u40000")),
            .rangeSeparator             (T("-")),
            .character                  (T("u4FFFD")),
            .setSeparator               (T(",")),
            .character                  (T("u50000")),
            .rangeSeparator             (T("-")),
            .character                  (T("u5FFFD")),
            .setSeparator               (T(",")),
            .character                  (T("u60000")),
            .rangeSeparator             (T("-")),
            .character                  (T("u6FFFD")),
            .setSeparator               (T(",")),
            .character                  (T("u70000")),
            .rangeSeparator             (T("-")),
            .character                  (T("u7FFFD")),
            .setSeparator               (T(",")),
            .character                  (T("u80000")),
            .rangeSeparator             (T("-")),
            .character                  (T("u8FFFD")),
            .setSeparator               (T(",")),
            .character                  (T("u90000")),
            .rangeSeparator             (T("-")),
            .character                  (T("u9FFFD")),
            .setSeparator               (T(",")),
            .character                  (T("uA0000")),
            .rangeSeparator             (T("-")),
            .character                  (T("uAFFFD")),
            .setSeparator               (T(",")),
            .character                  (T("uB0000")),
            .rangeSeparator             (T("-")),
            .character                  (T("uBFFFD")),
            .setSeparator               (T(",")),
            .character                  (T("uC0000")),
            .rangeSeparator             (T("-")),
            .character                  (T("uCFFFD")),
            .setSeparator               (T(",")),
            .character                  (T("uD0000")),
            .rangeSeparator             (T("-")),
            .character                  (T("uDFFFD")),
            .setSeparator               (T(",")),
            .character                  (T("uE0000")),
            .rangeSeparator             (T("-")),
            .character                  (T("uEFFFD")),

            .bracketedSetRightDelimiter (T("}")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("identifier_character")),
            .helperDefinitionMarker     (T("->")),
            .identifier                 (T("decimal_digit")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("identifier_character")),
            .helperDefinitionMarker     (T("->")),
            .character                  (T("u0300")),
            .rangeSeparator             (T("-")),
            .character                  (T("u036F")),
            .unionOperator              (T("|")),
            .character                  (T("u1DC0")),
            .rangeSeparator             (T("-")),
            .character                  (T("u1DFF")),
            .unionOperator              (T("|")),
            .character                  (T("u20D0")),
            .rangeSeparator             (T("-")),
            .character                  (T("u20FF")),
            .unionOperator              (T("|")),
            .character                  (T("uFE20")),
            .rangeSeparator             (T("-")),
            .character                  (T("uFE2F")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("identifier_character")),
            .helperDefinitionMarker     (T("->")),
            .identifier                 (T("identifier_head")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("implicit_parameter_name")),
            .helperDefinitionMarker     (T("->")),
            .character                  (T("'$")),
            .identifier                 (T("decimal_digit")),
            .oneOrMoreOperator          (T("+")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("keyword")),
            .tokenDefinitionMarker      (T("=>")),
            .identifier                 (T("declaration_keyword")),
            .unionOperator              (T("|")),
            .identifier                 (T("statement_keyword")),
            .unionOperator              (T("|")),
            .identifier                 (T("expression_or_type_keyword")),
            .unionOperator              (T("|")),
            .identifier                 (T("pattern_keyword")),
            .unionOperator              (T("|")),
            .identifier                 (T("hash_keyword")),
            .unionOperator              (T("|")),
            .identifier                 (T("contextual_keyword")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("declaration_keyword")),
            .helperDefinitionMarker     (T("->")),
            .string                     (T("\"associatedtype\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"class\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"deinit\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"enum\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"extension\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"fileprivate\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"func\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"import\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"init\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"inout\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"internal\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"let\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"open\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"operator\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"private\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"protocol\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"public\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"static\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"struct\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"subscript\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"typealias\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"var\"")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("statement_keyword")),
            .helperDefinitionMarker     (T("->")),
            .string                     (T("\"break\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"case\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"continue\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"default\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"defer\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"do\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"else\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"fallthrough\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"for\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"guard\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"if\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"in\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"repeat\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"return\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"switch\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"where\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"while\"")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("expression_or_type_keyword")),
            .helperDefinitionMarker     (T("->")),
            .string                     (T("\"as\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"Any\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"catch\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"false\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"is\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"nil\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"rethrows\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"super\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"self\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"Self\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"throw\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"throws\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"true\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"try\"")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("pattern_keyword")),
            .helperDefinitionMarker     (T("->")),
            .character                  (T("'_")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("hash_keyword")),
            .helperDefinitionMarker     (T("->")),
            .string                     (T("\"#available\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#colorLiteral\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#column\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#else\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#elseif\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#endif\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#file\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#fileLiteral\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#function\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#if\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#imageLiteral\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#line\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#selector\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"#sourceLocation\"")),
            .ruleTerminator             (T(";")),

            .identifier                 (T("contextual_keyword")),
            .helperDefinitionMarker     (T("->")),
            .string                     (T("\"associativity\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"convenience\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"dynamic\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"didSet\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"final\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"get\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"infix\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"indirect\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"lazy\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"left\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"mutating\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"none\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"nonmutating\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"optional\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"override\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"postfix\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"precedence\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"prefix\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"Protocol\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"required\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"right\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"set\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"Type\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"unowned\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"weak\"")),
            .unionOperator              (T("|")),
            .string                     (T("\"willSet\"")),
            .ruleTerminator             (T(";")),
        ]

        XCTAssertEqual(actualTokens.count, expectedTokens.count)

        for i in 0..<actualTokens.count
        {
            XCTAssertEqual(actualTokens[i], expectedTokens[i])
        }

    }

    static var allTests =
    [
        ("testExample", testExample),
    ]
}
